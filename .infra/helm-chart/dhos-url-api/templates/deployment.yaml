apiVersion: apps/v1
kind: Deployment
metadata:
  name: dhos-url-api-dep
  labels:
    app: dhos-url-api
    sh/version: {{ .Values.imagetag }}
    sh/type: api
{{ toYaml .Values.labels | indent 4 }}
spec:
  replicas: {{ if .Values.replicas }}{{.Values.replicas}}{{ else }}2{{ end }}
  selector:
    matchLabels:
      app: dhos-url-api
  template:
    metadata:
      labels:
        app: dhos-url-api
        sh/version: {{ .Values.imagetag }}
        sh/type: api
{{ toYaml .Values.labels | indent 8 }}
    spec:
      initContainers:
      - name: init-postgres
        image: "{{ (index .Values.image .Values.pull_images_from).dbinit }}:{{ .Values.db_init_imagetag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy  }}
        args:
        - azure-multitenant
        envFrom:
        - configMapRef:
            name: dhos-url-api-cm
        - secretRef:
            name: dhos-url-api-secrets
      containers:
      - name: dhos-url-api
        image: "{{ (index .Values.image .Values.pull_images_from).api }}:{{ .Values.imagetag }}"
        imagePullPolicy: {{.Values.imagePullPolicy}}
        command:
          - /bin/bash
        args:
          - -c
          - 'flask db upgrade && python -m dhos_url_api'
        envFrom:
        - configMapRef:
            name: dhos-url-api-cm
        - secretRef:
            name: dhos-url-api-secrets
        ports:
        - containerPort: 5000
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /running
            port: 5000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /running
            port: 5000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 20
