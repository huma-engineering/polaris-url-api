ACR_DOCKER_AUTH_MASTER: &ACR_DOCKER_AUTH
  auth:
    username: humagdmacr
    password: ${ACR_PASSWORD}

version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.1.4
jobs:
  test:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run: |
          poetry self update
          poetry config http-basic.sensynehealth ${GEMFURY_DOWNLOAD_KEY} ''
          pip install --upgrade tox
      - run:
          name: Set up tox tests
          command: pip install --upgrade tox
      - restore_cache:
          keys:
            - v1-poetry-deps-{{ checksum "poetry.lock" }}
            - v1-poetry-deps-
      - run:
          name: Run tox tests
          command: tox -e py39
      - save_cache:
          key: v1-poetry-deps-{{ checksum "poetry.lock" }}
          paths:
            - .tox
      - persist_to_workspace:
          root: coverage-reports
          paths:
            - coverage.xml
  integration-test:
    docker:
      - image: &circleci_build_image humagdmacr.azurecr.io/she/circleci-build-image
        <<: *ACR_DOCKER_AUTH
    environment:
      REPORT_PORTAL_PROJECT: platform
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run:
          name: Auth with ACR
          command: az acr login -n $ACR_REGISTRY_NAME -u $AZURE_USERNAME -p $AZURE_PASSWORD
      - run:
          name: Run the integration test script
          command: .circleci/run_integration_tests.sh
  deploy-dev:
    docker:
      - image: *circleci_build_image
        <<: *ACR_DOCKER_AUTH
    environment:
      K8S_DEV_NAMESPACES: dhos-dev
      K8S_DEV_DEPLOYMENT_NAME: deployment/dhos-url-api-dep
      ACR_REPO_BASE: dhos
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run:
          name: Add build information
          command: .circleci/record_build_info.sh
      - run:
          name: Build image
          command: docker build -t ${CIRCLE_PROJECT_REPONAME} --build-arg GEMFURY_DOWNLOAD_KEY .
      - azure-acr/build-and-push-image:
          checkout: false
          login-server-name: ${AZURE_LOGIN_SERVER_NAME}
          registry-name: ${AZURE_REGISTRY_NAME}
          repo: ${ACR_REPO_BASE}/dhos-url-api
          tag: dev,cb-${CIRCLE_BUILD_NUM},$(git log --pretty=format:'%h' -n 1)
          extra-build-args: --build-arg GEMFURY_DOWNLOAD_KEY
      - run:
          name: Deploy to UK dev cluster in Azure
          command: .circleci/deploy_dev.sh uk uk-dev-api-upstream
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: engineering-build
      - integration-test:
          context: engineering-build
      - deploy-dev:
          context: dhos-deploy
          requires:
            - test
            - integration-test
          filters:
            branches:
              only:
                - develop
